###############################################################################
# File         : ll_sc.S
# Project      : EE180 Lab 2: MIPS
#
# Standards/Formatting:
#   MIPS gas, soft tab, 80 column
#
# Description:
#   Test the functionality of the 'll and sc' instructions.
#
###############################################################################


    .section .boot, "x"
    .balign 4
    .set    noreorder
    .global boot
    .ent    boot
boot:
    lui     $s0, 0x8002         # Load the base address of the status/test registers
    ori     $s1, $0, 1          # Prepare the 'done' status

    lui     $t0, 0              # Load some valid address 0x00003210 to register $t0
    ori     $t0, $t0, 0x3210

    lui     $t3, 0xbeef
    ori     $t3, $t3, 0xdead
    sw      $t3, 0($t0)         # 0x00003210 contains 0xdeadbeef

    ll      $t1, 0($t0)         # load linked 0xdeadbeef into $t1
    subu	$t1, $t1, 1         # $t1 has 0xdeadbeef - 1, 
    sc      $t1, 0($t0)         # should successfully put 0xdeadbeef - 1 into address 0x00003210 and $t1 should contain 1
    # TODO: check that $t1 contain 1 from the successful store
    sltiu    $v0, $t1, 2 

    # lui     $t3, 0xbeef         # t3 now has 0xbeef
    # ll      $t1, 0($t0)         # load linked 0xdeadbeef - 1 into $t1
    # sw      $t3, 0($t0)         # modify address 0x00003210 while it's linked. Now contains 0x0000beef
    # addi    $t1, $t1, 1              
    # # Try to store conditional to address 0x00003210. Should not put 0xdeadbeef into 0x00003210
    # # Address 0x00003210 should still contain 0x0000beef, and $t1 should contain 0.
    # sc      $t1, 0($t0)    
    # addi    $t1, $t1, 1 
    # and     $v0, $v0, $t1
    
    sw      $v0, 4($s0)         # Set the test result
    sw      $s1, 0($s0)         # Set 'done'

$done:
    j       $done
    nop


.end boot
